"use client"
import React, { useEffect, useRef } from "react";
import { useScroll, useTransform, motion } from 'framer-motion';
import Lenis from 'lenis';
export default function Footer() {
    const container = useRef();
    const paths = useRef([]);
    const { scrollYProgress } = useScroll({
        target: container,
        offset: ['center start', 'end end']
    })

    useEffect( () => {

        scrollYProgress.on("change", e => {
    
            paths.current.forEach( (path, i) => {
    
                path.setAttribute("startOffset", 40 + (i * 40) + (e * -30) + "%");
    
            })
    
        })
    
    }, [scrollYProgress])


    useEffect( () => {

        const lenis = new Lenis()
    
    
    
        function raf(time) {
    
            lenis.raf(time)
    
            requestAnimationFrame(raf)
    
        }
    
    
    
        requestAnimationFrame(raf)
    
    }, [])

    return (
        <div ref={container} className="w-full">
            <svg className="w-full mb-20 mt-20 " viewBox="0 0 1506 234" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path className="stroke-black dark:stroke-[#f1e3a3]" id="curve" stroke-width="3" stroke-linecap="round" d="M2 175C5.75526 178.38 12.7841 179.138 17.5 180.5C21.835 181.752 26.3752 183.167 30.5 185C39.2405 188.885 49.3796 188.852 58.5 191.5C64.7259 193.308 71.0068 193.756 77.4444 194.056C86.5455 194.479 96.149 196.477 105.222 197.611C128.233 200.487 151.305 203 174.556 203C189.821 203 204.567 202.249 219.611 199.444C237.126 196.179 255.992 193.986 272.944 188.444C291.589 182.349 309.636 173.959 327.056 165C342.916 156.843 360.246 150.518 375.056 140.5C397.594 125.254 419.461 104.136 415.778 74.6667C413.787 58.7393 405.555 46.6266 396 34C390.301 26.4687 383.294 19.1756 376.556 12.5556C372.819 8.88429 368.116 5.19893 363 3.77778C355.571 1.71425 348.676 2 340.889 2C331.436 2 320.188 0.663873 311.222 4.44444C295.383 11.1236 284.13 24.9699 278.444 40.8889C271.539 60.2252 273.777 83.3414 284 101C297.353 124.065 315.653 146.729 341.111 157.222C365.217 167.158 389.795 167.188 413.611 156.833C441.513 144.702 456.373 119.925 472.889 95.6667C478.686 87.1522 482.696 77.4811 487.611 68.4444C492.73 59.0316 500.214 51.6615 506.389 43.1111C508.735 39.8622 511.217 38.2117 514.722 36.3889C524.469 31.3206 538.419 29.4439 549.333 28.5556C573.048 26.6253 594.091 27.5882 614.5 40.5C626.908 48.3501 639.713 56.1254 651.167 65.3333C662.57 74.501 673.036 84.7624 684.444 93.8889C695.124 102.432 706.311 109.97 716.556 119.111C730.346 131.417 743.29 144.58 758.278 155.5C791.19 179.479 831.938 184.972 871.389 187.556C900.716 189.476 930.069 190.891 959.444 191.778C974.12 192.221 990.71 193.712 1005.33 191.333C1021.52 188.701 1039.15 185.382 1054.67 180C1062.6 177.246 1069.07 174.895 1075.56 169.222C1090.09 156.502 1102.33 142.763 1119.89 133.778C1142.08 122.422 1165.92 121.804 1190.33 120.222C1203.35 119.378 1216.62 122.678 1229.67 123C1243.1 123.332 1256.59 127.482 1268.78 133C1300.08 147.172 1333.62 158.822 1363.22 176.444C1380.51 186.734 1396.73 198.61 1414.78 207.667C1431.8 216.212 1449.59 222.05 1468 226.778C1480.53 229.997 1491.19 232 1504 232" />
                <text className="text-3xl uppercase" style={{ fill: "red" }}>
                    {
                        [...Array(5)].map((_, i) => {
                            return <textPath key={i} ref={ref => paths.current[i] = ref} startOffset={i * 40 + "%"} href="#curve">Savor Cornwall, One Pasta at a Time</textPath>
                        })
                    }
                </text>
            </svg>
        </div>
    )
}

